
Truncate Table silver.crm_cust_info;
Insert Into silver.crm_cust_info(
cst_id,
cst_key,
cst_firstname,
cst_lastname,
cst_marital_status,
cst_gndr,
cst_create_date

)
Select 
cst_id,
cst_key,
TRIM(cst_firstname) cst_firstname,
TRIM(cst_lastname) cst_lastname,
Case When Upper(TRIM(cst_marital_status))='M' Then 'Married'
     When Upper(TRIM(cst_marital_status))='S' Then 'Single'
	 Else 'n/a' End cst_marital_status,
CASE When Upper(TRIM(cst_gndr))='F' Then 'Female'
     When Upper(TRIM(cst_gndr))='M' Then 'Male'
	 Else 'n/a' End  cst_gndr,
cst_create_date
From (
Select
*,
ROW_NUMBER() Over (Partition by cst_id Order by cst_create_date Desc) as flag_rank 

FRom bronze.crm_cust_info) t Where flag_rank =1)



Truncate Table silver.crm_prd_info;
Insert Into silver.crm_prd_info(
prd_id,
cat_id,
prd_key,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt

)

Select  
prd_id,
Replace(SUBSTRING ( prd_key, 1,5), '-','_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
ISNull(prd_cost,0),
Case When Upper(Trim(prd_line))='M' Then 'Mountain'
     When Upper(Trim(prd_line))='R' Then 'Road'
	 When Upper(Trim(prd_line))='S' Then 'Other Sales'
	 When Upper(Trim(prd_line))='T' Then 'Touring'
	 Else 'n/a'
End As prd_line,
--Here we have issue with prd_end_dt as it is smaller than start_dt for some items which were built on multiple years, so we gonna completely ignore it and get the end of the previous start data for the same item
--End date=Start date of te next record -1
Cast(prd_start_dt As Date) as prd_start_dt,
Cast(Lead(prd_start_dt)Over( Partition by prd_key Order by prd_start_dt)-1  As Date) as prd_end_dt

From bronze.crm_prd_info




Truncate table silver.crm_sales_details;
Insert into silver.crm_sales_details(
sls_ord_num,
sls_prd_key,
sls_cust_id,
sls_order_dt,
sls_ship_dt,
sls_due_dt,
sls_sales,
sls_quantity,
sls_price

)
SELECT 
			sls_ord_num,
			sls_prd_key,
			sls_cust_id,
			CASE 
				WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL
				ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
			END AS sls_order_dt,
			CASE 
				WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL
				ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
			END AS sls_ship_dt,
			CASE 
				WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 THEN NULL
				ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
			END AS sls_due_dt,
			CASE 
				WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price) 
					THEN sls_quantity * ABS(sls_price)
				ELSE sls_sales
			END AS sls_sales, -- Recalculate sales if original value is missing or incorrect
			sls_quantity,
			CASE 
				WHEN sls_price IS NULL OR sls_price <= 0 
					THEN sls_sales / NULLIF(sls_quantity, 0)
				ELSE sls_price  -- Derive price if original value is invalid
			END AS sls_price
		FROM bronze.crm_sales_details;



Truncate Table silver.erp_cust_az12;
Insert into silver.erp_cust_az12(
cid,
bdate,
gen
)
Select 
Case When cid Like 'NAS%' Then Substring(cid,4,Len(cid))
     Else cid
End as cid,
Case when bdate> Getdate() then Null
     Else bdate
End as bdate,
Case When Upper(Trim(gen)) In ('F', 'FEMALE') Then 'Female'
     When Upper(Trim(gen)) In ('M','MALE') Then 'Male'
	 Else 'n/a'

End as gen
From bronze.erp_cust_az12



Truncate Table  silver.erp_loc_a101;
Insert into silver.erp_loc_a101(cid,cntry)

Select 
Replace(cid, '-','') cid,
Case When Trim(cntry)='DE' Then 'Germany'
     When Trim(cntry) In ('US','USA') Then 'United States'
	 When Trim(cntry)='' or cntry IS Null Then 'n/a'
	 Else Trim(cntry)
End as cntry
from bronze.erp_loc_a101


Truncate Table silver.erp_px_cat_g1v2
Insert into silver.erp_px_cat_g1v2(id,cat,subcat,maintenance)
Select * from bronze.erp_px_cat_g1v2

